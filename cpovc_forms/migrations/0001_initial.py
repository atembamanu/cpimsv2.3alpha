# -*- coding: utf-8 -*-
from __future__ import unicode_literals

from django.db import migrations, models
import datetime
import django.utils.timezone
from django.conf import settings
import uuid


class Migration(migrations.Migration):

    dependencies = [
        ('cpovc_registry', '__first__'),
        ('cpovc_main', '__first__'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('cpovc_ovc', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='FormsAuditTrail',
            fields=[
                ('transaction_id', models.AutoField(serialize=False, primary_key=True)),
                ('form_id', models.UUIDField(null=True)),
                ('form_type_id', models.CharField(max_length=250)),
                ('transaction_type_id', models.CharField(max_length=4, null=True, db_index=True)),
                ('interface_id', models.CharField(max_length=4, null=True, db_index=True)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('meta_data', models.TextField(null=True)),
                ('app_user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'forms_audit_trail',
            },
        ),
        migrations.CreateModel(
            name='FormsLog',
            fields=[
                ('form_log_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('form_type_id', models.CharField(max_length=250)),
                ('form_id', models.CharField(default=b'XXXX', max_length=50)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('timestamp_modified', models.DateTimeField(auto_now=True)),
                ('app_user', models.IntegerField(default=404, null=True)),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson', null=True)),
            ],
            options={
                'db_table': 'forms_log',
            },
        ),
        migrations.CreateModel(
            name='ListBanks',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('bank_name', models.CharField(max_length=150)),
                ('bank_code', models.CharField(max_length=10)),
                ('is_void', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'list_bank',
                'verbose_name': 'Bank',
                'verbose_name_plural': 'Banks',
            },
        ),
        migrations.CreateModel(
            name='OVCAdverseEventsFollowUp',
            fields=[
                ('adverse_condition_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('adverse_condition_description', models.CharField(max_length=20)),
                ('attendance_type', models.CharField(max_length=4, null=True)),
                ('referral_type', models.CharField(max_length=4, null=True)),
                ('adverse_event_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_adverseevents_followup',
            },
        ),
        migrations.CreateModel(
            name='OVCAdverseEventsOtherFollowUp',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('adverse_condition', models.CharField(max_length=20)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('adverse_condition_id', models.ForeignKey(to='cpovc_forms.OVCAdverseEventsFollowUp')),
            ],
            options={
                'db_table': 'ovc_adverseevents_other_followup',
            },
        ),
        migrations.CreateModel(
            name='OVCBursary',
            fields=[
                ('bursary_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('bursary_type', models.CharField(max_length=4, null=True)),
                ('disbursement_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('amount', models.CharField(max_length=20, null=True)),
                ('year', models.CharField(max_length=20, null=True)),
                ('term', models.CharField(max_length=20, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_bursaryinfo',
            },
        ),
        migrations.CreateModel(
            name='OVCCareAssessment',
            fields=[
                ('assessment_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('domain', models.CharField(max_length=4)),
                ('service', models.CharField(max_length=4)),
                ('service_status', models.CharField(max_length=4)),
                ('service_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_care_assessment',
            },
        ),
        migrations.CreateModel(
            name='OVCCareBenchmarkScore',
            fields=[
                ('bench_mark_score_id', models.AutoField(serialize=False, primary_key=True)),
                ('bench_mark_1', models.IntegerField(default=0)),
                ('bench_mark_2', models.IntegerField(default=0)),
                ('bench_mark_3', models.IntegerField(default=0)),
                ('bench_mark_4', models.IntegerField(default=0)),
                ('bench_mark_5', models.IntegerField(default=0)),
                ('bench_mark_6', models.IntegerField(default=0)),
                ('bench_mark_7', models.IntegerField(default=0)),
                ('bench_mark_8', models.IntegerField(default=0)),
                ('bench_mark_9', models.IntegerField(default=0)),
                ('bench_mark_10', models.IntegerField(default=0)),
                ('bench_mark_11', models.IntegerField(default=0)),
                ('bench_mark_12', models.IntegerField(default=0)),
                ('bench_mark_13', models.IntegerField(default=0)),
                ('bench_mark_14', models.IntegerField(default=0)),
                ('bench_mark_15', models.IntegerField(default=0)),
                ('bench_mark_16', models.IntegerField(default=0)),
                ('bench_mark_17', models.IntegerField(default=0)),
                ('score', models.IntegerField()),
                ('is_void', models.BooleanField(default=False)),
                ('date_of_event', models.DateField(default=django.utils.timezone.now)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('care_giver_id', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_care_benchmark_score',
            },
        ),
        migrations.CreateModel(
            name='OVCCareCasePlan',
            fields=[
                ('case_plan_id', models.AutoField(serialize=False, primary_key=True)),
                ('domain', models.CharField(max_length=50)),
                ('goal', models.CharField(max_length=255)),
                ('need', models.CharField(max_length=255)),
                ('priority', models.CharField(max_length=255)),
                ('responsible', models.CharField(max_length=50)),
                ('completion_date', models.DateField(default=django.utils.timezone.now)),
                ('results', models.CharField(max_length=300)),
                ('reasons', models.CharField(max_length=300)),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('cp_service_id', models.ForeignKey(to='cpovc_main.SetupList')),
            ],
            options={
                'db_table': 'ovc_care_case_plan',
            },
        ),
        migrations.CreateModel(
            name='OVCCareCpara',
            fields=[
                ('cpara_id', models.AutoField(serialize=False, primary_key=True)),
                ('question', models.CharField(max_length=150)),
                ('answer', models.CharField(max_length=5)),
                ('question_type', models.CharField(max_length=50)),
                ('domain', models.CharField(max_length=50)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'ovc_care_cpara',
            },
        ),
        migrations.CreateModel(
            name='OVCCareEAV',
            fields=[
                ('eav_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('entity', models.CharField(max_length=5)),
                ('attribute', models.CharField(max_length=5)),
                ('value', models.CharField(max_length=25)),
                ('value_for', models.CharField(max_length=10, null=True)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_care_eav',
            },
        ),
        migrations.CreateModel(
            name='OVCCareEvents',
            fields=[
                ('event', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('event_type_id', models.CharField(max_length=4)),
                ('event_counter', models.IntegerField(default=0)),
                ('event_score', models.IntegerField(default=0, null=True)),
                ('date_of_event', models.DateField(default=django.utils.timezone.now)),
                ('date_of_previous_event', models.DateTimeField(default=django.utils.timezone.now, null=True)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('house_hold', models.ForeignKey(to='cpovc_ovc.OVCHouseHold', null=True)),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson', null=True)),
            ],
            options={
                'db_table': 'ovc_care_events',
            },
        ),
        migrations.CreateModel(
            name='OVCCareF1B',
            fields=[
                ('form_id', models.UUIDField(default=uuid.uuid4, serialize=False, editable=False, primary_key=True)),
                ('domain', models.CharField(max_length=5)),
                ('entity', models.CharField(max_length=5)),
                ('value', models.SmallIntegerField(default=1)),
                ('is_void', models.BooleanField(default=False)),
                ('event', models.ForeignKey(to='cpovc_forms.OVCCareEvents')),
            ],
            options={
                'db_table': 'ovc_care_f1b',
            },
        ),
        migrations.CreateModel(
            name='OVCCareForms',
            fields=[
                ('form_id', models.AutoField(serialize=False, primary_key=True)),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(max_length=255)),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'ovc_care_forms',
            },
        ),
        migrations.CreateModel(
            name='OVCCarePriority',
            fields=[
                ('priority_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('domain', models.CharField(max_length=4)),
                ('service', models.CharField(max_length=4)),
                ('service_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('event', models.ForeignKey(to='cpovc_forms.OVCCareEvents')),
            ],
            options={
                'db_table': 'ovc_care_priority',
            },
        ),
        migrations.CreateModel(
            name='OVCCareQuestions',
            fields=[
                ('question_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('code', models.CharField(max_length=5)),
                ('question', models.CharField(max_length=55)),
                ('domain', models.CharField(max_length=10)),
                ('question_text', models.CharField(max_length=255)),
                ('question_type', models.CharField(max_length=20)),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('form', models.ForeignKey(to='cpovc_forms.OVCCareForms')),
            ],
            options={
                'db_table': 'ovc_care_questions',
            },
        ),
        migrations.CreateModel(
            name='OVCCareServices',
            fields=[
                ('service_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('service_provided', models.CharField(max_length=250)),
                ('service_provider', models.CharField(max_length=250, null=True)),
                ('domain', models.CharField(max_length=4, null=True)),
                ('place_of_service', models.CharField(max_length=250, null=True)),
                ('date_of_encounter_event', models.DateField(default=django.utils.timezone.now, null=True)),
                ('service_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('event', models.ForeignKey(to='cpovc_forms.OVCCareEvents')),
            ],
            options={
                'db_table': 'ovc_care_services',
            },
        ),
        migrations.CreateModel(
            name='OVCCareWellbeing',
            fields=[
                ('well_being_id', models.AutoField(serialize=False, primary_key=True)),
                ('question_code', models.CharField(max_length=15)),
                ('question', models.CharField(max_length=150)),
                ('answer', models.CharField(max_length=50)),
                ('question_type', models.CharField(max_length=5)),
                ('domain', models.CharField(max_length=10)),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('event_id', models.ForeignKey(to='cpovc_forms.OVCCareEvents')),
                ('household_id', models.ForeignKey(to='cpovc_ovc.OVCHouseHold')),
                ('person_id', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_care_well_being',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseCategory',
            fields=[
                ('case_category_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('case_category', models.CharField(max_length=4)),
                ('case_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('date_of_event', models.DateField(default=django.utils.timezone.now)),
                ('place_of_event', models.CharField(max_length=4)),
                ('case_nature', models.CharField(max_length=4)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_case_category',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseEventClosure',
            fields=[
                ('closure_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('case_outcome', models.CharField(max_length=4)),
                ('date_of_case_closure', models.DateField(default=django.utils.timezone.now)),
                ('case_closure_notes', models.CharField(max_length=1000)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_case_event_closure',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseEventCourt',
            fields=[
                ('court_session_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('court_order', models.CharField(max_length=250, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('case_category', models.ForeignKey(default=uuid.uuid1, blank=True, editable=False, to='cpovc_forms.OVCCaseCategory')),
            ],
            options={
                'db_table': 'ovc_case_event_court',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseEvents',
            fields=[
                ('case_event_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('case_event_type_id', models.CharField(max_length=20)),
                ('date_of_event', models.DateField(default=django.utils.timezone.now)),
                ('case_event_details', models.CharField(max_length=100)),
                ('case_event_notes', models.CharField(max_length=1000, blank=True)),
                ('case_event_outcome', models.CharField(max_length=250, null=True)),
                ('next_hearing_date', models.DateField(null=True)),
                ('next_mention_date', models.DateField(null=True)),
                ('plea_taken', models.CharField(max_length=4, null=True)),
                ('application_outcome', models.CharField(max_length=4, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('app_user', models.ForeignKey(default=1, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'ovc_case_events',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseEventServices',
            fields=[
                ('service_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('service_provided', models.CharField(max_length=250)),
                ('service_provider', models.CharField(max_length=250, null=True)),
                ('place_of_service', models.CharField(max_length=250, null=True)),
                ('date_of_encounter_event', models.DateField(default=django.utils.timezone.now)),
                ('service_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('case_category', models.ForeignKey(default=uuid.uuid1, blank=True, editable=False, to='cpovc_forms.OVCCaseCategory')),
                ('case_event_id', models.ForeignKey(to='cpovc_forms.OVCCaseEvents')),
            ],
            options={
                'db_table': 'ovc_case_event_encounters',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseEventSummon',
            fields=[
                ('summon_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('honoured', models.BooleanField(default=False)),
                ('honoured_date', models.DateField(null=True)),
                ('summon_date', models.DateField(null=True)),
                ('summon_note', models.CharField(max_length=250, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('case_category', models.ForeignKey(default=uuid.uuid1, editable=False, to='cpovc_forms.OVCCaseCategory', null=True)),
                ('case_event_id', models.ForeignKey(to='cpovc_forms.OVCCaseEvents')),
            ],
            options={
                'db_table': 'ovc_case_event_summon',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseGeo',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('report_ward', models.CharField(max_length=100, null=True)),
                ('report_village', models.CharField(max_length=100, null=True)),
                ('occurence_ward', models.CharField(max_length=100, blank=True)),
                ('occurence_village', models.CharField(max_length=100, blank=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
            ],
            options={
                'db_table': 'ovc_case_geo',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseRecord',
            fields=[
                ('case_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('case_serial', models.CharField(default=b'XXXX', max_length=50)),
                ('perpetrator_status', models.CharField(default=b'PKNW', max_length=20)),
                ('perpetrator_first_name', models.CharField(max_length=50, null=True)),
                ('perpetrator_other_names', models.CharField(max_length=50, null=True)),
                ('perpetrator_surname', models.CharField(max_length=50, null=True)),
                ('perpetrator_relationship_type', models.CharField(max_length=50, null=True)),
                ('risk_level', models.CharField(max_length=50)),
                ('date_case_opened', models.DateField(default=datetime.date.today)),
                ('case_reporter_first_name', models.CharField(max_length=50, null=True)),
                ('case_reporter_other_names', models.CharField(max_length=50, null=True)),
                ('case_reporter_surname', models.CharField(max_length=50, null=True)),
                ('case_reporter_contacts', models.CharField(max_length=20, null=True)),
                ('case_reporter', models.CharField(max_length=20, blank=True)),
                ('court_name', models.CharField(max_length=200, null=True)),
                ('court_number', models.CharField(max_length=50, null=True)),
                ('police_station', models.CharField(max_length=200, null=True)),
                ('ob_number', models.CharField(max_length=50, null=True)),
                ('case_status', models.CharField(default=b'ACTIVE', max_length=50)),
                ('referral_present', models.CharField(default=b'AYES', max_length=10)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('parent_case_id', models.UUIDField(null=True)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('case_remarks', models.CharField(max_length=1000, null=True)),
                ('date_of_summon', models.DateField(null=True)),
                ('summon_status', models.NullBooleanField(default=None)),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_case_record',
            },
        ),
        migrations.CreateModel(
            name='OVCCaseSubCategory',
            fields=[
                ('case_sub_category_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('case_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('sub_category_id', models.CharField(max_length=4)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('case_category', models.ForeignKey(to='cpovc_forms.OVCCaseCategory')),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_case_sub_category',
            },
        ),
        migrations.CreateModel(
            name='OVCDischargeFollowUp',
            fields=[
                ('discharge_followup_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('type_of_discharge', models.CharField(max_length=20)),
                ('date_of_discharge', models.DateField(default=django.utils.timezone.now, null=True)),
                ('discharge_destination', models.CharField(max_length=20, null=True)),
                ('reason_of_discharge', models.CharField(max_length=1000, blank=True)),
                ('expected_return_date', models.DateField(null=True)),
                ('actual_return_date', models.DateField(null=True)),
                ('discharge_comments', models.CharField(max_length=1000, blank=True)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_discharge_followup',
            },
        ),
        migrations.CreateModel(
            name='OVCDocuments',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('document_type', models.CharField(max_length=100)),
                ('document_description', models.CharField(max_length=200)),
                ('document_name', models.CharField(max_length=100, blank=True)),
                ('document_dir', models.CharField(max_length=1000, blank=True)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_documents',
            },
        ),
        migrations.CreateModel(
            name='OVCEconomicStatus',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('household_economic_status', models.CharField(max_length=100)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('case_id', models.ForeignKey(to='cpovc_forms.OVCCaseRecord')),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_economic_status',
            },
        ),
        migrations.CreateModel(
            name='OVCEducationFollowUp',
            fields=[
                ('education_followup_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('admitted_to_school', models.CharField(max_length=10)),
                ('admission_to_school_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('education_comments', models.CharField(max_length=1000, null=True)),
                ('not_in_school_reason', models.CharField(max_length=4, null=True)),
                ('school_admission_type', models.CharField(max_length=4, null=True)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_education_followup',
            },
        ),
        migrations.CreateModel(
            name='OVCEducationLevelFollowUp',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('admission_level', models.CharField(max_length=20, null=True)),
                ('admission_sublevel', models.CharField(max_length=20, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('education_followup_id', models.ForeignKey(to='cpovc_forms.OVCEducationFollowUp')),
            ],
            options={
                'db_table': 'ovc_education_level_followup',
            },
        ),
        migrations.CreateModel(
            name='OVCExplanations',
            fields=[
                ('explanation_id', models.AutoField(serialize=False, primary_key=True)),
                ('question', models.CharField(max_length=255)),
                ('comment', models.CharField(max_length=255)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('event_id', models.ForeignKey(to='cpovc_forms.OVCCareEvents')),
                ('form_id', models.ForeignKey(to='cpovc_forms.OVCCareForms')),
            ],
            options={
                'db_table': 'ovc_explanations',
            },
        ),
        migrations.CreateModel(
            name='OVCFamilyCare',
            fields=[
                ('familycare_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('type_of_care', models.CharField(max_length=4)),
                ('certificate_number', models.CharField(max_length=20, null=True)),
                ('date_of_certificate_expiry', models.DateField(null=True)),
                ('type_of_adoption', models.CharField(max_length=4, null=True)),
                ('adoption_country', models.CharField(max_length=20, null=True)),
                ('date_of_adoption', models.DateField(default=django.utils.timezone.now, null=True)),
                ('court_name', models.CharField(max_length=100, null=True)),
                ('court_file_number', models.CharField(max_length=20, null=True)),
                ('parental_status', models.CharField(max_length=4, null=True)),
                ('contact_person', models.CharField(max_length=20, null=True)),
                ('adopting_mother_firstname', models.CharField(max_length=20, null=True)),
                ('adopting_mother_surname', models.CharField(max_length=20, null=True)),
                ('adopting_mother_othernames', models.CharField(max_length=20, null=True)),
                ('adopting_mother_idnumber', models.CharField(max_length=20, null=True)),
                ('adopting_mother_contacts', models.CharField(max_length=20, null=True)),
                ('adopting_father_firstname', models.CharField(max_length=20, null=True)),
                ('adopting_father_surname', models.CharField(max_length=20, null=True)),
                ('adopting_father_othernames', models.CharField(max_length=20, null=True)),
                ('adopting_father_idnumber', models.CharField(max_length=20, null=True)),
                ('adopting_father_contacts', models.CharField(max_length=20, null=True)),
                ('adopting_agency', models.CharField(max_length=20, null=True)),
                ('adoption_remarks', models.CharField(max_length=1000, null=True)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('adoption_subcounty', models.ForeignKey(related_name='adoption_subcounty_fk', to='cpovc_main.SetupGeography', null=True)),
                ('children_office', models.ForeignKey(related_name='children_office_fk', to='cpovc_registry.RegOrgUnit', null=True)),
                ('fostered_from', models.ForeignKey(related_name='fostered_from_fk', to='cpovc_registry.RegOrgUnit', null=True)),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
                ('residential_institution_name', models.ForeignKey(related_name='residential_institution_name_fk', to='cpovc_registry.RegOrgUnit', null=True)),
            ],
            options={
                'db_table': 'ovc_family_care',
            },
        ),
        migrations.CreateModel(
            name='OVCFamilyStatus',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('family_status', models.CharField(max_length=100)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('case_id', models.ForeignKey(to='cpovc_forms.OVCCaseRecord')),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_family_status',
            },
        ),
        migrations.CreateModel(
            name='OVCFriends',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('friend_firstname', models.CharField(max_length=50)),
                ('friend_other_names', models.CharField(max_length=50)),
                ('friend_surname', models.CharField(max_length=50)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('case_id', models.ForeignKey(to='cpovc_forms.OVCCaseRecord')),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_friends',
            },
        ),
        migrations.CreateModel(
            name='OVCGoals',
            fields=[
                ('goal_id', models.AutoField(serialize=False, primary_key=True)),
                ('goal', models.CharField(max_length=255)),
                ('action', models.CharField(max_length=255)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('event_id', models.ForeignKey(to='cpovc_forms.OVCCareEvents')),
                ('person_id', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_goals',
            },
        ),
        migrations.CreateModel(
            name='OVCGokBursary',
            fields=[
                ('application_id', models.UUIDField(default=uuid.uuid4, serialize=False, editable=False, primary_key=True)),
                ('sub_county', models.CharField(max_length=100, null=True)),
                ('location', models.CharField(max_length=100, null=True)),
                ('sub_location', models.CharField(max_length=100, null=True)),
                ('village', models.CharField(max_length=100)),
                ('nearest_school', models.CharField(max_length=100, null=True)),
                ('nearest_worship', models.CharField(max_length=100, null=True)),
                ('in_school', models.BooleanField(default=True)),
                ('school_class', models.CharField(max_length=50)),
                ('primary_school', models.CharField(max_length=150)),
                ('school_marks', models.IntegerField()),
                ('father_names', models.CharField(max_length=100)),
                ('father_alive', models.BooleanField(default=True)),
                ('father_telephone', models.CharField(max_length=20, null=True)),
                ('mother_names', models.CharField(max_length=100)),
                ('mother_alive', models.BooleanField(default=True)),
                ('mother_telephone', models.CharField(max_length=20, null=True)),
                ('guardian_names', models.CharField(max_length=100, null=True)),
                ('guardian_telephone', models.CharField(max_length=20, null=True)),
                ('guardian_relation', models.CharField(max_length=20, null=True)),
                ('same_household', models.BooleanField(default=True)),
                ('father_chronic_ill', models.BooleanField(default=True)),
                ('father_chronic_illness', models.CharField(max_length=100, null=True)),
                ('father_disabled', models.BooleanField(default=True)),
                ('father_disability', models.CharField(max_length=100, null=True)),
                ('father_pension', models.BooleanField(default=True)),
                ('father_occupation', models.CharField(max_length=100, null=True)),
                ('mother_chronic_ill', models.BooleanField(default=True)),
                ('mother_chronic_illness', models.CharField(max_length=100, null=True)),
                ('mother_disabled', models.BooleanField(default=True)),
                ('mother_disability', models.CharField(max_length=100, null=True)),
                ('mother_pension', models.BooleanField(default=True)),
                ('mother_occupation', models.CharField(max_length=100, null=True)),
                ('fees_amount', models.IntegerField()),
                ('fees_balance', models.IntegerField()),
                ('school_secondary', models.CharField(max_length=150)),
                ('school_principal', models.CharField(max_length=150)),
                ('school_sub_county', models.CharField(max_length=100, null=True)),
                ('school_location', models.CharField(max_length=100, null=True)),
                ('school_sub_location', models.CharField(max_length=100, null=True)),
                ('school_village', models.CharField(max_length=100, null=True)),
                ('school_telephone', models.CharField(max_length=20, null=True)),
                ('school_email', models.CharField(max_length=100, null=True)),
                ('school_type', models.CharField(max_length=5)),
                ('school_category', models.CharField(max_length=5)),
                ('school_enrolled', models.CharField(max_length=5)),
                ('school_bank_branch', models.CharField(max_length=100)),
                ('school_bank_account', models.CharField(max_length=50)),
                ('school_recommend_by', models.CharField(max_length=5)),
                ('school_recommend_date', models.DateField()),
                ('chief_recommend_by', models.CharField(max_length=5)),
                ('chief_recommend_date', models.DateField()),
                ('chief_telephone', models.CharField(max_length=5)),
                ('csac_approved', models.BooleanField(default=True)),
                ('approved_amount', models.IntegerField()),
                ('ssco_name', models.CharField(max_length=100)),
                ('scco_signed', models.BooleanField(default=True)),
                ('scco_sign_date', models.DateField()),
                ('csac_chair_name', models.CharField(max_length=100)),
                ('csac_signed', models.BooleanField(default=True)),
                ('csac_sign_date', models.DateField()),
                ('application_date', models.DateField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('app_user', models.ForeignKey(to=settings.AUTH_USER_MODEL)),
                ('constituency', models.ForeignKey(related_name='child_constituency', to='cpovc_main.SetupGeography')),
                ('county', models.ForeignKey(related_name='child_county', to='cpovc_main.SetupGeography')),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
                ('school_bank', models.ForeignKey(to='cpovc_forms.ListBanks')),
                ('school_constituency', models.ForeignKey(related_name='school_constituency', to='cpovc_main.SetupGeography')),
                ('school_county', models.ForeignKey(related_name='school_county', to='cpovc_main.SetupGeography')),
            ],
            options={
                'db_table': 'bursary_application',
                'verbose_name': 'GoK Bursary',
                'verbose_name_plural': 'GoK Bursaries',
            },
        ),
        migrations.CreateModel(
            name='OVCHivStatus',
            fields=[
                ('hiv_status_id', models.AutoField(serialize=False, primary_key=True)),
                ('hiv_status', models.CharField(max_length=10)),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('event_id', models.ForeignKey(to='cpovc_forms.OVCCareEvents')),
                ('person_id', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_hiv_status',
            },
        ),
        migrations.CreateModel(
            name='OVCHobbies',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('hobby', models.CharField(max_length=200)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('case_id', models.ForeignKey(to='cpovc_forms.OVCCaseRecord')),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_hobbies',
            },
        ),
        migrations.CreateModel(
            name='OVCHouseholdDemographics',
            fields=[
                ('household_demographics_id', models.AutoField(serialize=False, primary_key=True)),
                ('key', models.CharField(max_length=15)),
                ('male', models.IntegerField(default=0)),
                ('female', models.IntegerField(default=0)),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('event_id', models.ForeignKey(to='cpovc_forms.OVCCareEvents')),
                ('household_id', models.ForeignKey(to='cpovc_ovc.OVCHouseHold')),
            ],
            options={
                'db_table': 'ovc_household_demographics',
            },
        ),
        migrations.CreateModel(
            name='OVCMedical',
            fields=[
                ('medical_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('mental_condition', models.CharField(max_length=50)),
                ('physical_condition', models.CharField(max_length=50)),
                ('other_condition', models.CharField(max_length=50)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('case_id', models.ForeignKey(to='cpovc_forms.OVCCaseRecord')),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_medical',
            },
        ),
        migrations.CreateModel(
            name='OVCMedicalSubconditions',
            fields=[
                ('medicalsubcond_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('medical_condition', models.CharField(max_length=50)),
                ('medical_subcondition', models.CharField(max_length=50)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('medical_id', models.ForeignKey(to='cpovc_forms.OVCMedical')),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_medical_subconditions',
            },
        ),
        migrations.CreateModel(
            name='OVCMonitoring',
            fields=[
                ('monitoring_id', models.AutoField(serialize=False, primary_key=True)),
                ('hiv_status_knowledge', models.CharField(max_length=5)),
                ('viral_suppression', models.CharField(max_length=5)),
                ('hiv_prevention', models.CharField(max_length=5)),
                ('access_money', models.CharField(max_length=5)),
                ('violence', models.CharField(max_length=5)),
                ('caregiver', models.CharField(max_length=5)),
                ('school_attendance', models.CharField(max_length=5)),
                ('school_progression', models.CharField(max_length=5)),
                ('cp_achievement', models.CharField(max_length=5)),
                ('case_closure', models.CharField(max_length=5)),
                ('is_void', models.BooleanField(default=False)),
                ('event_date', models.DateField(default=django.utils.timezone.now)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('event_id', models.ForeignKey(to='cpovc_forms.OVCCareEvents')),
                ('household_id', models.ForeignKey(to='cpovc_ovc.OVCHouseHold')),
            ],
            options={
                'db_table': 'ovc_monitoring',
            },
        ),
        migrations.CreateModel(
            name='OVCNeeds',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('need_description', models.CharField(max_length=250)),
                ('need_type', models.CharField(max_length=250)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('case_id', models.ForeignKey(to='cpovc_forms.OVCCaseRecord')),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_needs',
            },
        ),
        migrations.CreateModel(
            name='OVCPlacement',
            fields=[
                ('placement_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('residential_institution_name', models.CharField(max_length=100, blank=True)),
                ('admission_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('admission_type', models.CharField(max_length=4, blank=True)),
                ('transfer_from', models.CharField(max_length=100, null=True)),
                ('admission_reason', models.CharField(max_length=100, blank=True)),
                ('holding_period', models.IntegerField(null=True)),
                ('committing_period_units', models.CharField(max_length=4, null=True)),
                ('committing_period', models.IntegerField(null=True)),
                ('current_residential_status', models.CharField(max_length=4)),
                ('has_court_committal_order', models.CharField(max_length=4)),
                ('free_for_adoption', models.CharField(max_length=4, null=True)),
                ('court_order_number', models.CharField(max_length=20, null=True)),
                ('court_order_issue_date', models.DateField(default=django.utils.timezone.now, null=True)),
                ('committing_court', models.CharField(max_length=100, null=True)),
                ('placement_notes', models.CharField(max_length=1000, null=True)),
                ('ob_number', models.CharField(max_length=20, null=True)),
                ('placement_type', models.CharField(default=b'Normal', max_length=10)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_placement',
            },
        ),
        migrations.CreateModel(
            name='OVCPlacementFollowUp',
            fields=[
                ('placememt_followup_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('followup_type', models.CharField(max_length=100)),
                ('followup_date', models.DateField(default=django.utils.timezone.now)),
                ('followup_details', models.CharField(max_length=1000, blank=True)),
                ('followup_outcome', models.CharField(max_length=1000, blank=True)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
                ('placement_id', models.ForeignKey(to='cpovc_forms.OVCPlacement')),
            ],
            options={
                'db_table': 'ovc_placement_followup',
            },
        ),
        migrations.CreateModel(
            name='OVCReferral',
            fields=[
                ('refferal_id', models.UUIDField(default=uuid.uuid1, serialize=False, editable=False, primary_key=True)),
                ('refferal_actor_type', models.CharField(max_length=4)),
                ('refferal_actor_specify', models.CharField(max_length=50)),
                ('refferal_to', models.CharField(max_length=4)),
                ('refferal_status', models.CharField(default=b'PENDING', max_length=20)),
                ('refferal_startdate', models.DateField(default=datetime.date.today)),
                ('refferal_enddate', models.DateField(null=True)),
                ('referral_grouping_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('case_category', models.ForeignKey(default=uuid.uuid1, editable=False, to='cpovc_forms.OVCCaseCategory', null=True)),
                ('case_id', models.ForeignKey(to='cpovc_forms.OVCCaseRecord')),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_referrals',
            },
        ),
        migrations.CreateModel(
            name='OVCReferrals',
            fields=[
                ('referral_id', models.AutoField(serialize=False, primary_key=True)),
                ('referral_date', models.DateField(default=django.utils.timezone.now)),
                ('service', models.CharField(max_length=20)),
                ('institution', models.CharField(max_length=50)),
                ('contact_person', models.CharField(max_length=50)),
                ('completed', models.BooleanField(default=False)),
                ('outcome', models.CharField(max_length=255)),
                ('is_void', models.BooleanField(default=False)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('timestamp_updated', models.DateTimeField(auto_now=True)),
                ('event_id', models.ForeignKey(to='cpovc_forms.OVCCareEvents')),
                ('person_id', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_cp_referrals',
            },
        ),
        migrations.CreateModel(
            name='OVCReminders',
            fields=[
                ('id', models.AutoField(verbose_name='ID', serialize=False, auto_created=True, primary_key=True)),
                ('reminder_date', models.DateField(default=django.utils.timezone.now)),
                ('reminder_type', models.CharField(max_length=100)),
                ('reminder_description', models.CharField(max_length=1000)),
                ('reminder_status', models.CharField(max_length=10)),
                ('created_by', models.IntegerField(default=404, null=True)),
                ('timestamp_created', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_void', models.BooleanField(default=False)),
                ('sync_id', models.UUIDField(default=uuid.uuid1, editable=False)),
                ('person', models.ForeignKey(to='cpovc_registry.RegPerson')),
            ],
            options={
                'db_table': 'ovc_reminders',
            },
        ),
        migrations.AddField(
            model_name='ovceducationfollowup',
            name='placement_id',
            field=models.ForeignKey(to='cpovc_forms.OVCPlacement', null=True),
        ),
        migrations.AddField(
            model_name='ovceducationfollowup',
            name='school_id',
            field=models.ForeignKey(to='cpovc_main.SchoolList', null=True),
        ),
        migrations.AddField(
            model_name='ovcdischargefollowup',
            name='placement_id',
            field=models.ForeignKey(to='cpovc_forms.OVCPlacement'),
        ),
        migrations.AddField(
            model_name='ovccasegeo',
            name='case_id',
            field=models.ForeignKey(to='cpovc_forms.OVCCaseRecord'),
        ),
        migrations.AddField(
            model_name='ovccasegeo',
            name='occurence_county',
            field=models.ForeignKey(related_name='occurence_county_fk', to='cpovc_main.SetupGeography'),
        ),
        migrations.AddField(
            model_name='ovccasegeo',
            name='occurence_subcounty',
            field=models.ForeignKey(related_name='occurence_subcounty_fk', to='cpovc_main.SetupGeography'),
        ),
        migrations.AddField(
            model_name='ovccasegeo',
            name='person',
            field=models.ForeignKey(to='cpovc_registry.RegPerson'),
        ),
        migrations.AddField(
            model_name='ovccasegeo',
            name='report_orgunit',
            field=models.ForeignKey(to='cpovc_registry.RegOrgUnit', max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='ovccasegeo',
            name='report_subcounty',
            field=models.ForeignKey(related_name='report_subcounty_fk', to='cpovc_main.SetupGeography'),
        ),
        migrations.AddField(
            model_name='ovccaseevents',
            name='case_id',
            field=models.ForeignKey(to='cpovc_forms.OVCCaseRecord', null=True),
        ),
        migrations.AddField(
            model_name='ovccaseevents',
            name='placement_id',
            field=models.ForeignKey(to='cpovc_forms.OVCPlacement', null=True),
        ),
        migrations.AddField(
            model_name='ovccaseeventcourt',
            name='case_event_id',
            field=models.ForeignKey(to='cpovc_forms.OVCCaseEvents'),
        ),
        migrations.AddField(
            model_name='ovccaseeventclosure',
            name='case_event_id',
            field=models.ForeignKey(to='cpovc_forms.OVCCaseEvents'),
        ),
        migrations.AddField(
            model_name='ovccaseeventclosure',
            name='transfer_to',
            field=models.ForeignKey(to='cpovc_registry.RegOrgUnit', max_length=10, null=True),
        ),
        migrations.AddField(
            model_name='ovccasecategory',
            name='case_id',
            field=models.ForeignKey(to='cpovc_forms.OVCCaseRecord'),
        ),
        migrations.AddField(
            model_name='ovccasecategory',
            name='person',
            field=models.ForeignKey(to='cpovc_registry.RegPerson'),
        ),
        migrations.AddField(
            model_name='ovccareeav',
            name='event',
            field=models.ForeignKey(to='cpovc_forms.OVCCareEvents'),
        ),
        migrations.AddField(
            model_name='ovccarecpara',
            name='event_id',
            field=models.ForeignKey(to='cpovc_forms.OVCCareEvents'),
        ),
        migrations.AddField(
            model_name='ovccarecpara',
            name='household_id',
            field=models.ForeignKey(to='cpovc_ovc.OVCHouseHold'),
        ),
        migrations.AddField(
            model_name='ovccarecpara',
            name='person_id',
            field=models.ForeignKey(to='cpovc_registry.RegPerson'),
        ),
        migrations.AddField(
            model_name='ovccarecaseplan',
            name='event_id',
            field=models.ForeignKey(to='cpovc_forms.OVCCareEvents'),
        ),
        migrations.AddField(
            model_name='ovccarecaseplan',
            name='form_id',
            field=models.ForeignKey(to='cpovc_forms.OVCCareForms'),
        ),
        migrations.AddField(
            model_name='ovccarecaseplan',
            name='person_id',
            field=models.ForeignKey(to='cpovc_registry.RegPerson'),
        ),
        migrations.AddField(
            model_name='ovccarebenchmarkscore',
            name='event_id',
            field=models.ForeignKey(to='cpovc_forms.OVCCareEvents'),
        ),
        migrations.AddField(
            model_name='ovccarebenchmarkscore',
            name='household_id',
            field=models.ForeignKey(to='cpovc_ovc.OVCHouseHold'),
        ),
        migrations.AddField(
            model_name='ovccareassessment',
            name='event',
            field=models.ForeignKey(to='cpovc_forms.OVCCareEvents'),
        ),
        migrations.AddField(
            model_name='ovcadverseeventsfollowup',
            name='placement_id',
            field=models.ForeignKey(to='cpovc_forms.OVCPlacement'),
        ),
    ]
